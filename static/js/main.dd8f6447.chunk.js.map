{"version":3,"sources":["components/Cards/Cards.module.css","App.module.css","api/index.js","components/Navbar/TopBar.jsx","components/Footer/Footer.jsx","components/Cards/Cards.jsx","components/Charts/Charts.jsx","App.js","index.js","components/Navbar/TopBar.module.css","components/Charts/Charts.module.css"],"names":["module","exports","url","fetchData","endpoint","a","changeableUrl","axios","get","data","console","log","fetchDailyData","length","changeableUrl2","TopBar","handleCountryChange","useState","fetchedCountries","setFetchedCountries","useEffect","countries","map","coun","country","fetchCountries","Navbar","bg","variant","fixed","Container","className","cx","styles","smallScreen","Brand","href","Nav","Link","Form","Select","aria-label","w30","onChange","e","target","value","i","Footer","fluid","Row","Col","md","sm","lg","rel","class","Cards","active","cases","deaths","todayCases","todayDeaths","recovered","todayRecovered","critical","tests","population","updated","container","dojRow","smaal","Card","dojCard","Body","Title","Subtitle","cardSubtitle","start","end","duration","separator","Text","Date","toDateString","infected","Charts","dates","setDates","dailyData","setDailyData","timeline","dailyCases","dailyDeaths","dailyRecovered","Object","keys","key","getDailyCases","values","val","getDailyDeaths","getDailyRecovered","fetchApi","selectedChart","setSelectedChart","doughnut","labels","datasets","label","backgroundColor","borderColor","borderWidth","lineChart","fill","barChart","options","chartColumn","chartType","chartSelect","App","fetchedData","setFetchedData","fetchedCountry","setFetchedCountry","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.dd8f6447.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__3bjn6\",\"dojRow\":\"Cards_dojRow__2vWDT\",\"dojCard\":\"Cards_dojCard__3L-EI\",\"recovered\":\"Cards_recovered__1aizD\",\"infected\":\"Cards_infected__-adYp\",\"deaths\":\"Cards_deaths__Qdjzq\",\"cardSubtitle\":\"Cards_cardSubtitle__qJ9aK\",\"smaal\":\"Cards_smaal__2iLFM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"con\":\"App_con__2XGyr\"};","import axios from \"axios\";\n\nconst url = 'https://disease.sh/v3/covid-19';\n// const url2 = 'https://corona.lmao.ninja/v2/historical';\n\nexport const fetchData = async (endpoint) =>{\n    let changeableUrl = url;\n    if(endpoint){\n        changeableUrl = `${url}/${endpoint}`\n    }\n    else{\n        changeableUrl = `${url}/all`\n    }\n    try {\n        const {data} = await axios.get(changeableUrl);\n        return data;\n    } catch (error) {\n        console.log(error)\n    }\n\n}\n\n\nexport const fetchDailyData = async (endpoint) => {\n    \n    if(endpoint === '' || endpoint === null || !endpoint || endpoint === 'global' || endpoint.length < 1){\n        // endpoint = 'gambia'\n        endpoint = 'all'\n    }\n    console.log(\"ENDPOINTTT\" + endpoint);\n    let changeableUrl2 = `${url}/historical/${endpoint}?lastdays=300`;\n    // console.log(\"endpointttttttt\"+endpoint);\n    try {\n        const data = axios.get(changeableUrl2);\n        // if(endpoint === 'all'){\n        //     console.log(data);\n        // }\n        return data;\n    } catch (error) {\n        console.log(error);\n    }\n}","import React, { useEffect, useState } from 'react';\n\nimport styles from './TopBar.module.css';\nimport { Container, Nav, Navbar, Form} from 'react-bootstrap';\nimport cx from 'classnames';\nimport { fetchData } from '../../api';\n\n\nconst TopBar = ({handleCountryChange})=>{\n\n    const [fetchedCountries, setFetchedCountries] = useState([])\n    useEffect(() => {\n        const fetchCountries = async () => {\n         const countries = await fetchData('countries')\n          setFetchedCountries(countries.map(coun => coun.country))\n      }\n      fetchCountries();\n      // console.log(fetchedCountries);\n    }, [setFetchedCountries])\n\n    return(\n        <Navbar bg=\"dark\" variant=\"dark\" fixed=\"top\">\n            <Container className={cx(styles.smallScreen)}>\n                <Navbar.Brand href=\"#home\">\n                    <h6 className=\"display-6\">\n                        D<i className=\"fas fa-virus fa-spin\"></i>J's Covid-19 Tracker    \n                    </h6>\n                </Navbar.Brand>\n                <Nav className=\"ms-auto w-\" >\n                    <Nav.Link href=\"#home\" className=\"w-\">\n                    <Form.Select aria-label=\"Default select example \" className={cx(\"\", styles.w30)} onChange={(e) => handleCountryChange(e.target.value)}>\n                        <option value=\"\">Global</option>\n                        {fetchedCountries.map((country, i) => <option key={i} value={country}>{country}</option>)}   \n                    </Form.Select>\n                    </Nav.Link>\n                    {/* <button onClick={()=>console.log(countries)}>Test</button> */}\n                </Nav>\n            </Container>\n        </Navbar>\n    )\n}\n\nexport default TopBar;","import React from 'react';\n\nimport styles from './Footer.module.css';\nimport {Container, Navbar, Row, Col} from 'react-bootstrap'\n\nconst Footer = ()=>{\n\n    return(\n        \n        <Container fluid className=\"bg-dark p-3 mt-3\">\n            <Container>\n                <Row className=\"justify-content-between\">\n                    <Col md={6} sm={12} lg={6} className=\"mt-4\">\n                        <h1 className=\"display-6 text-light\">Made with Love using React Js, Developed by Omar Jeng (DOJ) </h1>\n\n                    </Col>\n                    <Col md={4} sm={12} lg={3}>\n                        <h1 className=\"display-5 text-light text-center text-muted\">Contact Me</h1>\n                        <Row>\n                            <Col md={4} sm={4}>\n                                <a href=\"https://www.facebook.com/daddyomarjeng1\" target=\"_blank\" rel=\"noopener noreferrer\"><i class=\"fab fa-facebook text-primary bg-light px-3 py-2 rounded h3 shadow-lg\"></i></a>\n                            </Col>\n                            <Col md={4} sm={4}>\n                                <a href=\"https://gm.linkedin.com/in/daddy-omar-jeng-029aa0110\" target=\"_blank\" rel=\"noopener noreferrer\"><i class=\"fab fa-linkedin text-primary bg-light px-3 py-2 rounded h3 shadow-lg\"></i></a>\n                            </Col>\n                            <Col md={4} sm={4}>\n                                <a href=\"https://github.com/DOJ-gam\" target=\"_blank\" rel=\"noopener noreferrer\"><i class=\"fab fa-github text-primary bg-light px-3 py-2 rounded h3 shadow-lg\"></i></a>\n                            </Col>\n                            <Col md={4} sm={4}>\n                                <a href=\"https://www.instagram.com/doj_official/\" target=\"_blank\" rel=\"noopener noreferrer\"><i class=\"fab fa-instagram text-primary bg-light px-3 py-2 rounded h3 shadow-lg\"></i></a>\n                            </Col>\n                            <Col md={4} sm={4}>\n                                <a href=\"https://twitter.com/doj_official\" target=\"_blank\" rel=\"noopener noreferrer\"><i class=\"fab fa-twitter text-primary bg-light px-3 py-2 rounded h3 shadow-lg\"></i></a>\n                            </Col>\n                            <Col md={4} sm={4}>\n                                <a href=\"https://doj-gam.github.io/portfolio/\" target=\"_blank\" rel=\"noopener noreferrer\"><i class=\"fas fa-user text-primary bg-light px-3 py-2 rounded h3 shadow-lg\"></i></a>\n                            </Col>\n                        </Row>\n                    </Col>\n                    <Col md={12}><p className=\"text-muted text-center\">All Rights Reserved: © DOJ -Daddy Omar Jeng</p></Col>\n                    \n                </Row>\n            </Container>\n        </Container>\n\n    )\n}\n\nexport default Footer;","import React from 'react';\nimport { Card , Row, Col, Container} from 'react-bootstrap';\n// import { PersonPlus } from 'react-bootstrap-icons';\n\nimport styles from './Cards.module.css';\nimport cx from 'classnames';\nimport CountUp from 'react-countup';\n\nconst Cards = ({data:{active, cases, deaths, todayCases, todayDeaths, recovered, todayRecovered, tests, critical, population, updated, }})=>{\n\n    return(\n        <Container>\n            <Row className={  cx('', styles.container, styles.dojRow) }>\n                <Col md={3} className={styles.smaal}>\n                    <Card className={cx('shadow-sm px-1', styles.dojCard, styles.deaths)}>\n                        <Card.Body>\n                            <Card.Title>Deaths</Card.Title>\n                            <Card.Subtitle className={cx('text-muted', styles.cardSubtitle)}>\n                                <p>\n                                    <CountUp\n                                        start={0}\n                                        end={deaths}\n                                        duration={3.2}\n                                        separator=\",\"\n                                    />\n                                </p>\n                                <h6>\n                                    +\n                                    <CountUp\n                                        start={0}\n                                        end={todayDeaths}\n                                        duration={3.2}\n                                        separator=\",\"\n                                    />\n                                    <span> New</span>\n                                </h6>\n                            </Card.Subtitle>\n                            <Card.Text className=\"text-muted\">\n                                <p>Number of death cases of Covid-19</p>\n                                <h6>as at {new Date(updated).toDateString()}</h6>\n                                <p>\n                                    <CountUp\n                                        start={0}\n                                        end={critical}\n                                        duration={3.2}\n                                        separator=\",\"\n                                    />\n                                    <span> critical cases</span>\n                                </p>\n                            </Card.Text>\n                        </Card.Body>\n                    </Card>\n                </Col>\n                <Col md={3} className={styles.smaal}>\n                    <Card className={cx('shadow-sm px-1', styles.dojCard, styles.infected)}>\n                        <Card.Body>\n                            <Card.Title className=\"\">Infected</Card.Title>\n                            <Card.Subtitle className={cx('text-muted', styles.cardSubtitle)}>\n                                <p>\n                                    <CountUp\n                                        start={0}\n                                        end={cases}\n                                        duration={3.2}\n                                        separator=\",\"\n                                    />\n                                </p>\n                                <h6>\n                                {/* <GroupAdd fontSize=\"small\" /> */}\n                                    {/* <PersonPlus fontSize=\"\"/> */}\n                                    +\n                                    <CountUp\n                                        start={0}\n                                        end={todayCases}\n                                        duration={3.2}\n                                        separator=\",\"\n                                    /> <span> New</span>\n                                </h6>\n                            </Card.Subtitle>\n                            <Card.Text className=\"text-muted\">\n                                <p>Number of active cases of Covid-19</p>\n                                <h6>as at {new Date(updated).toDateString()}</h6>\n                                <p>\n                                    <CountUp\n                                        start={0}\n                                        end={active}\n                                        duration={3.2}\n                                        separator=\",\"\n                                    />\n                                    <span> active cases</span>\n                                </p>\n                            </Card.Text>\n                        </Card.Body>\n                    </Card>\n                </Col>\n                <Col md={3} className={styles.smaal}>\n                    <Card className={cx('shadow-sm px-1', styles.dojCard, styles.recovered)}>\n                        <Card.Body>\n                            <Card.Title className=\"\">Recovered</Card.Title>\n                            <Card.Subtitle className={cx('text-muted', styles.cardSubtitle)}>\n                            <p>\n                                <CountUp\n                                    start={0}\n                                    end={recovered}\n                                    duration={3.2}\n                                    separator=\",\"\n                                />\n                            </p>\n                            <h6>\n                                +\n                                <CountUp\n                                    start={0}\n                                    end={todayRecovered}\n                                    duration={3.2}\n                                    separator=\",\"\n                                />\n                                <span> New</span>\n                            </h6>\n                            </Card.Subtitle>\n                            <Card.Text className=\"text-muted\">\n                                <p>Number of recovered cases of Covid-19</p>\n                                <h6>as at {new Date(updated).toDateString()}</h6>\n                                <p>\n                                <span>Population: </span>\n                                <CountUp\n                                    start={0}\n                                    end={population}\n                                    duration={3.2}\n                                    separator=\",\"\n                                />\n                            </p>\n                            </Card.Text>\n                        </Card.Body>\n                    </Card>\n                </Col>\n\n                \n            </Row>\n            \n        </Container>\n    )\n}\n\nexport default Cards;","import React, { useEffect, useState } from 'react';\nimport { Container , Row, Col, Form} from 'react-bootstrap';\nimport { Bar, Doughnut, Line } from 'react-chartjs-2';\nimport { fetchDailyData } from '../../api';\n\nimport styles from './Charts.module.css';\n\nconst Charts = ({data:{cases, deaths, recovered}, country})=>{\n\n  const [dates, setDates] = useState([]);\n  const [dailyData, setDailyData] = useState({});\n  useEffect(() =>{\n    const fetchApi = async () =>{\n      const {data} = await fetchDailyData(country)\n    // console.log(data);\n      if( country.length < 2){\n        var timeline = {...data};\n      }\n     else{\n        var {timeline} = data;\n      }\n      \n      const {cases:dailyCases} = timeline;\n      const {deaths:dailyDeaths} = timeline;\n      const {recovered:dailyRecovered} = timeline;\n      // console.log(timeline);\n\n      // setDailyData();\n      // console.log(\"DAILYYYYYYY \"+country);\n      // const d = Object.keys(timeline).map(key => key);\n      setDates (Object.keys(dailyCases).map(key => new Date(key).toDateString()));\n      const getDailyCases = Object.values(dailyCases).map(val => val);\n      const getDailyDeaths = Object.values(dailyDeaths).map(val => val);\n      const getDailyRecovered = Object.values(dailyRecovered).map(val => val);\n      // setDailyData(previousState => ({\n      //   ...previousState, [cases] : getDailyCases\n      // }))\n      setDailyData({\n        cases : getDailyCases,\n        deaths: getDailyDeaths,\n        recovered: getDailyRecovered\n      })\n\n      // console.log(getDailyRecovered);\n    }\n    // console.log(dailyData);\n    // console.log(country);\n    fetchApi();\n  }, [setDailyData, country])\n\n  const [selectedChart, setSelectedChart] = useState(\"line\");\n\n  const handleChartChange = (chartType) =>{\n    setSelectedChart(chartType)\n  }\n\n    const doughnut = (\n      cases ? <Doughnut \n        data={\n          {\n            labels: ['Deaths', 'Infected', 'Recovered' ],\n            datasets: [\n              {\n                label: \"Some Label by DOJ\",\n                data: [deaths, cases, recovered],\n                backgroundColor: [\n                  'rgba(255, 0, 0, 0.6)',\n                  'rgba(0, 0, 255, 0.6)',\n                  'rgba(0, 255, 0, 0.6)'\n                ],\n                borderColor: [\n                  'rgba(0, 0, 255, 0.5)',\n                  'rgba(255, 0, 0, 0.5)',\n                  'rgba(0, 255, 0, 0.5)' \n                ],\n                borderWidth: 1\n              }\n            ],\n          }\n        } \n      /> : <h1 className=\"mt-5\"><i class=\"fas fa-spinner fa-spin fa-5x \"></i></h1>\n    )\n    \n    const lineChart = (\n      dailyData.deaths ?<Line\n        data ={\n          {\n            labels: dates,\n            datasets: [\n              {\n                data: dailyData.deaths,\n                label: 'Deaths',\n                borderColor: '#900',\n                backgroundColor: 'rgba(255, 0, 0, 0.5)',\n                // fill: true\n              },\n              {\n                data: dailyData.cases,\n                label: 'Infected',\n                borderColor: '#009',\n                backgroundColor: 'rgba(0, 0, 255, .5)',\n                // fill: true\n              },\n              {\n                data: dailyData.recovered,\n                label: 'Recovered',\n                borderColor: '#090',\n                backgroundColor: 'rgba(0, 255, 0, 0.5)',\n                fill: true\n              }\n            ]\n          }\n        }\n      /> : <h1 className=\"mt-5\"><i class=\"fas fa-spinner fa-spin fa-5x \"></i></h1>\n    )\n    \n    const barChart = (\n      cases ? <Bar\n        data={\n          {\n            labels: ['Deaths', \"Infected\", 'Recovered'],\n            datasets: [\n              {\n                label: 'People',\n                backgroundColor: [\n                    'rgba(255, 0, 0, 0.5)',\n                    'rgba(0, 0, 255, 0.5)',\n                    'rgba(0, 255, 0, 0.5)',\n                ],\n                data: [deaths, cases, recovered]\n              }\n            ]\n          }\n        }\n        options = {\n          {\n            // legend: {display: true},\n            // title: { display: true, text: `Current State in ${country}`}\n          }\n        }\n      /> : <h1 className=\"mt-5\"><i class=\"fas fa-spinner fa-spin fa-5x \"></i></h1>\n    )\n\n    return(\n       <Container>\n           <Row>\n               <Col md={12} className={styles.chartColumn}>\n                <Form.Select onChange={(e)=>handleChartChange(e.target.value)} className={styles.chartSelect}>\n                  <option value=\"line\">LineChart</option>\n                  <option value=\"bar\">BarChart</option>\n                </Form.Select>\n               </Col>\n               <Col md={8} sm={12}>\n                 { (selectedChart === \"line\") ? lineChart : barChart}\n                  {/* {lineChart} */}\n                  {/* {barChart} */}\n                  {/* {dailyData.map(c => `<h1>${c.country}</h1>`)} */}\n               </Col>\n               <Col md={4}>\n                  {doughnut}\n               </Col>\n           </Row>\n       </Container>\n    )\n}\n\nexport default Charts;","import React, { useEffect, useState } from 'react';\nimport styles from './App.module.css';\nimport { Navbar, Cards, Footer, Charts } from './components'\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Container } from 'react-bootstrap';\nimport { fetchData } from './api';\n\nfunction App() {\n\n  const [fetchedData, setFetchedData] = useState([])\n  const [fetchedCountry, setFetchedCountry] = useState([])\n  \n  useEffect(() => {\n    const fetchApi = async() =>{\n      setFetchedData(await fetchData())\n    }\n    fetchApi();\n    // console.log(fetchedData)\n  }, []);\n\n  //   useEffect(() => {\n  //     const fetchCountries = async () => {\n  //      const countries = await fetchData('countries')\n  //       setFetchedCountries(countries.map(coun => coun.country))\n  //   }\n  //   fetchCountries();\n  //   // console.log(fetchedCountries);\n  // }, [setFetchedCountries])\n  // console.log(handleFetchCountries);\n  const handleCountryChange = async (country) => {\n    if(!country){\n      setFetchedData(await fetchData());\n    }\n    else{\n      setFetchedData(await fetchData(`countries/${country}`));\n    }\n    setFetchedCountry(country)\n    // console.log(fetchedCountry);\n  }\n  return (\n    <>\n      <Navbar handleCountryChange={handleCountryChange}/>\n      <Container className=\"mb-5\">\n        <Cards data={fetchedData} />\n      </Container>\n      <Container className=\"px-5\">\n        <Charts data={fetchedData} country={fetchedCountry}/>\n      </Container>\n      \n      <Footer/>\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dd\":\"TopBar_dd__2tiqG\",\"w30\":\"TopBar_w30__MLHQG\",\"smallScreen\":\"TopBar_smallScreen__3RzIc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"chartColumn\":\"Charts_chartColumn__3F7r8\",\"chartSelect\":\"Charts_chartSelect__3BjfQ\"};"],"sourceRoot":""}